% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lfmm.R
\name{lfmm_ridge}
\alias{lfmm_ridge}
\title{LFMM least-squares estimates with ridge penalty}
\usage{
lfmm_ridge(Y, X, K, lambda = 1e-05, algorithm = c("analytical",
  "alternated"), it.max = 100, relative.err.min = 1e-06)
}
\arguments{
\item{Y}{a response variable matrix with n rows and p columns.
Each column corresponds to a distinct response variable (e.g., SNP genotype,
gene expression level, beta-normalized methylation profile, etc).
Response variables must be encoded as numeric.}

\item{X}{an explanatory variable matrix with n rows and d columns.
Each column corresponds to a distinct explanatory variable (eg. phenotype).
Explanatory variables must be encoded as numeric variables.}

\item{K}{an integer for the number of latent factors in the regression model.}

\item{lambda}{a numeric value for the regularization parameter.}

\item{algorithm}{analytical solution algorithm or numerical alternated algorithm.
The analytical solution algorithm is based on global minimum of the loss function and
the computation is very quick. The numerical alternated algorithm converges toward a local
minimum of the loss function. The interest of the alternated algorithm is that it does not
imply the computation of a \eqn{n \times n} matrix. Whereas the analytical algorithm requires
the computation of a \eqn{n \times n} matrix, which can be a problem when n is very large.}

\item{it.max}{an integer value for the number of iterations of the algorithm. Only for the
alternated numerical algorithm}

\item{relative.err.epsilon}{a numeric value for a relative convergence error. Determine
whether the algorithm converges or not. Only for the
alternated numerical algorithm.}
}
\value{
an object of class \code{lfmm} with the following attributes:
\itemize{
\item U the latent variable score matrix with dimensions n x K,
\item V the latent variable axis matrix with dimensions p x K,
\item B the effect size matrix with dimensions p x d.
}
}
\description{
This function computes regularized least squares estimates
for latent factor mixed models using a ridge penalty.
}
\details{
The algorithm minimizes the following penalized least-squares criterion
\deqn{ L(U, V, B) = \frac{1}{2} ||Y - U V^{T} - X B^T||_{F}^2 
+ \frac{\lambda}{2} ||B||^{2}_{2} ,}
where Y is a response data matrix, X contains all explanatory variables,
U denotes the score matrix, V is the loading matrix, B is the (direct) effect
size matrix, and lambda is a regularization parameter.

The response variable matrix Y and the explanatory variable are centered.
}
\examples{
library(lfmm)
data(example.data)
Y <- example.data$genotype
X <- example.data$phenotype

## fits an lfmm model, i.e, computes B, U, V:
mod.lfmm <- lfmm_ridge(Y = Y, X = X, K = 6)

## performs association testing using the fitted model:
pv <- lfmm_test(Y = Y, X = X, lfmm = mod.lfmm, calibrate = "gif")

## Manhattan plot
plot(-log10(pv$calibrated.pvalue), pch = 19, cex = .2, col = "grey")
points(example.data$causal.set, 
      -log10(pv$calibrated.pvalue)[example.data$causal.set], 
       type = "h", col = "blue")


## Another example  
## sample data
K <- 3
dat <- lfmm_sampler(n = 100, p = 1000, K = K,
                    outlier.prop = 0.1,
                    cs = c(0.8),
                    sigma = 0.2,
                    B.sd = 1.0,
                    U.sd = 1.0,
                    V.sd = 1.0)
## fit an LFMM with K = 3 latent factors
lfmm.res <- lfmm_ridge(Y = dat$Y, X = dat$X, K = 3, lambda = 1e-5)

## plot the effect size matrix
id <- seq_along(lfmm.res$B)
cols <- c('red', 'green')[as.numeric(id \%in\% dat$outlier) + 1]
plot(id, lfmm.res$B, col = cols)
}
\author{
cayek
}
