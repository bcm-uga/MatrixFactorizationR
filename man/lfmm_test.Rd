% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lfmm.R
\name{lfmm_test}
\alias{lfmm_test}
\title{Statistical tests with latent factor mixed models}
\usage{
lfmm_test(Y, X, lfmm, calibrate = "gif")
}
\arguments{
\item{Y}{a response variable matrix with n rows and p columns.
Each column is a response variable (numeric).}

\item{X}{an explanatory variable matrix with n rows and d columns.
Each column corresponds to an explanatory variable (numeric).}

\item{lfmm}{an object of class \code{lfmm} returned by the \link{lfmm_lasso}
or \link{lfmm_ridge} function}

\item{calibrate}{a character string, "gif" or "median+MAD". If the "gif" option is set (default),
significance values are calibrated by using the genomic control method. Genomic control
uses a robust estimate of the variance of z-scores called "genomic inflation factor".
If the "median+MAD" option is set, the pvalues are calibrated by computing the median and MAD of the zscores. If \code{NULL}, the
pvalues are not calibrated.}
}
\value{
a list with the following attributes:
\itemize{
\item B the effect size matrix with dimensions p x d.
\item score a p x d matrix which contains z-scores for each explanatory variable (column of X)
\item pvalue a p x d matrix which contains p-values for each explanatory variable
\item calibrated.pvalue a p x d matrix which contains calibrated p-values for each explanatory variable
\item gif a numeric value for the genomic inflation factor.
}
}
\description{
This function returns significance values for the association between each column of the
response matrix, Y, and the explanatory variables, X, including correction for unobserved confounders
(latent factors). The test is based on an LFMM fitted with a ridge or lasso penalty.
}
\examples{
library(lfmm)
data(example.data)
Y <- scale(example.data$genotype, scale = FALSE)
X <- scale(example.data$phenotype)

## fits an lfmm model, i.e, computes B, U, V:
mod.lfmm <- lfmm_ridge(Y = Y, X = X, K = 6)

## performs association testing using the fitted model:
pv <- lfmm_test(Y = Y, X = X, lfmm = mod.lfmm, calibrate = "gif")

## Manhattan plot
plot(-log10(pv$calibrated.pvalue), pch = 19, cex = .2, col = "grey")
points(example.data$causal.set, 
      -log10(pv$calibrated.pvalue)[example.data$causal.set], 
       type = "h", col = "blue")


## Another example 
K <- 3
dat <- lfmm_sampler(n = 100, p = 1000, K = K,
                    outlier.prop = 0.1,
                    cs = c(0.8),
                    sigma = 0.2,
                    B.sd = 1.0,
                    U.sd = 1.0,
                    V.sd = 1.0)
## lfmm
lfmm.res <- lfmm_ridge(Y = dat$Y, X = dat$X, K = 3, lambda = 1e-5)

## hp
hp.res <- lfmm_test(Y = dat$Y, X = dat$X, lfmm = lfmm.res)

## plot score
id <- seq_along(hp.res$calibrated.score)
cols <- c('red', 'green')[as.numeric(id \%in\% dat$outlier) + 1]
plot(id, hp.res$calibrated.score2, col = cols)

## plot pvalue
id <- seq_along(hp.res$calibrated.pvalue)
cols <- c('red', 'green')[as.numeric(id \%in\% dat$outlier) + 1]
plot(id, -log10(hp.res$calibrated.pvalue), col = cols)
}
\author{
cayek
}
